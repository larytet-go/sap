apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-controller
  labels:
    app: ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-controller
  template:
    metadata:
      labels:
        app: ingress-controller
    spec:
      containers:
      - name: ingress-controller
        image: ingress-controller:mylatest
        ports:
        - containerPort: 80
          hostPort: 8080
        # Cutting corners: I CustomResourceDefinition
        # Meanwhile a single environment variable which rules them all
        env:
        - name: "RULES"
          # comma separaed tuples (host:path,host:path,...)
          # Intentionaly no port - I know to figire out the pods ports
          # whitespace is ignored
          value: " echo:default / echo-app "

---

apiVersion: v1
kind: Service
metadata:
  name: ingress-controller
spec:
  type: NodePort
  ports:
  - name: http
    # Warning: check kind.yaml 
    nodePort: 30950
    port: 80
  selector:
    app: ingress-controller

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-controller
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-controller
  namespace: default
subjects:
- kind: ServiceAccount
  # Cutting corners: every pod in the default namespace gets the clusterrole
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: ingress-controller
  apiGroup: rbac.authorization.k8s.io